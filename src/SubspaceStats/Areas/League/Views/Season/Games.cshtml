@using System.Text
@using Microsoft.Extensions.Options
@using SubspaceStats.Areas.League.Models
@using SubspaceStats.Areas.League.Models.Season
@using SubspaceStats.Areas.League.Models.Season.Round
@using SubspaceStats.Areas.League.Models.Season.Team
@using SubspaceStats.Options
@model GamesViewModel
@inject IOptions<GeneralOptions> generalOptions

@{
	ViewData["Title"] = "Manage Games";

	bool isOnly2TeamMatches = true;
	foreach (var game in Model.Games)
	{
		if (game.Teams.Count != 2)
		{
			isOnly2TeamMatches = false;
			break;
		}
	}
}

@await Html.PartialAsync("_LeagueSeasonChooser", Model.LeagueSeasonChooser)
@await Html.PartialAsync("_SeasonNav")
@* <h1>Manage Games</h1> *@

<div class="mb-3">
	<a asp-controller="SeasonGame" asp-action="Create" asp-route-seasonId="@Model.Season.SeasonId" class="mx-2 text-nowrap">Add Game</a>
	@if (Model.League.MinTeamsPerGame == 2 && Model.League.MaxTeamsPerGame == 2)
	{
		<a asp-controller="SeasonGame" asp-action="AddFullRound" asp-route-seasonId="@Model.Season.SeasonId" class="mx-2 text-nowrap">Add a Full Round</a>
	}
</div>

<div class="table-responsive">
	<table class="table table-striped table-bordered table-hover">
		<thead>
			<tr>
				<th class="text-end">Match ID</th>
				<th>Round</th>
				<th class="@(isOnly2TeamMatches ? "text-center" : "")">Teams</th>
				<th class="@(isOnly2TeamMatches ? "text-center" : "")">Score</th>
				<th>Time</th>
				<th>Status</th>
				<th colspan="2">Actions</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var game in Model.Games)
			{
				<tr>
					<td class="text-end">@game.SeasonGameId</td>
					<td>
						@if (Model.Rounds.TryGetValue(game.RoundNumber, out SeasonRound? round))
						{
							@round.RoundName
						}
						else
						{
							@game.RoundNumber
						}
					</td>
					<td>
						@if (isOnly2TeamMatches)
						{
							<div class="d-flex align-items-center">
								<div class="col text-end">
									@if (Model.Teams.TryGetValue(game.Teams[0].TeamId, out TeamModel? team))
									{
										<a asp-controller="Team" asp-action="Index" asp-route-teamId="@game.Teams[0].TeamId" class="text-nowrap">@team.TeamName</a>
									}
									else
									{
										<a asp-controller="Team" asp-action="Index" asp-route-teamId="@game.Teams[0].TeamId" class="text-nowrap">@game.Teams[0].TeamId</a>
									}
								</div>
								<div class="col-auto px-2">vs</div>
								<div class="col text-start">
									@if (Model.Teams.TryGetValue(game.Teams[1].TeamId, out team))
									{
										<a asp-controller="Team" asp-action="Index" asp-route-teamId="@game.Teams[1].TeamId" class="text-nowrap">@team.TeamName</a>
									}
									else
									{
										<a asp-controller="Team" asp-action="Index" asp-route-teamId="@game.Teams[1].TeamId" class="text-nowrap">@game.Teams[1].TeamId</a>
									}
								</div>
							</div>
						}
						else
						{
							for (int i = 0; i < game.Teams.Count; i++)
							{
								if (i > 0)
								{
									<text> vs </text>
								}

								long teamId = game.Teams[i].TeamId;
								if (Model.Teams.TryGetValue(teamId, out TeamModel? team))
								{
									<a asp-controller="Team" asp-action="Index" asp-route-teamId="@teamId" class="text-nowrap">@team.TeamName</a>
								}
								else
								{
									<a asp-controller="Team" asp-action="Index" asp-route-teamId="@teamId" class="text-nowrap">@teamId</a>
								}
							}
						}
					</td>
					<td class="text-center">
						@if (isOnly2TeamMatches)
						{
							if (game.GameId is not null)
							{
								<a asp-area="" asp-controller="Game" asp-action="Index" asp-route-id="@game.GameId.Value">
									<div class="d-flex align-items-center">
										<div class="col text-end">@game.Teams[0].Score</div>
										<div class="col-auto">-</div>
										<div class="col text-start">@game.Teams[1].Score</div>
									</div>
								</a>
							}
							else
							{
								<div class="d-flex align-items-center">
									<div class="col text-end">@game.Teams[0].Score</div>
									<div class="col-auto">-</div>
									<div class="col text-start">@game.Teams[1].Score</div>
								</div>
							}
						}
						else
						{
							if (game.Teams.All(t => t.Score is not null))
							{
								StringBuilder builder = new();
								for (int i = 0; i < game.Teams.Count; i++)
								{
									if (i > 0)
									{
										builder.Append(" - ");
									}

									builder.Append(game.Teams[i].Score);
								}

								if (game.GameId is not null)
								{
									<a asp-area="" asp-controller="Game" asp-action="Index" asp-route-id="@game.GameId.Value">@builder.ToString()</a>
								}
								else
								{
									@builder.ToString()
								}
							}
						}
					</td>
					<td>
						@if (game.GameTimestamp is not null)
						{
							@TimeZoneInfo.ConvertTimeFromUtc(game.GameTimestamp.Value, generalOptions.Value.TimeZone).ToString("yyyy-MM-dd hh:mm tt")
						}						
					</td>
					<td>
						@if (game.GameId is not null)
						{
							<a asp-area="" asp-controller="Game" asp-action="Index" asp-route-id="@game.GameId">@Html.DisplayTextFor(modelItem => game.Status)</a>
						}
						else
						{
							@Html.DisplayTextFor(modelItem => game.Status)
						}
					</td>
					<td><a asp-controller="SeasonGame" asp-action="Edit" asp-route-seasonId="@Model.Season.SeasonId" asp-route-seasonGameId="@game.SeasonGameId">Edit</a></td>
					<td><a asp-controller="SeasonGame" asp-action="Delete" asp-route-seasonId="@Model.Season.SeasonId" asp-route-seasonGameId="@game.SeasonGameId">Delete</a></td>
				</tr>
			}
		</tbody>
	</table>
</div>

@section Scripts {
	@await Html.PartialAsync("_LeagueSeasonChooseScript", Model.LeagueSeasonChooser)
}
